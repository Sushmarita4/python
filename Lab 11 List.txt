1. Write a Python program to sum all the items in a list. 

def sum_list_items(input_list):
    total = 0
    for item in input_list:
        total += item
    return total

# Example usage
numbers = [10, 20, 30, 40, 50]
result = sum_list_items(numbers)
print("Sum of all items in the list:", result)

OUTPUT:
Sum of all items in the list: 150
------------------------------------------------------------------------------------------------------------------------------------

2. Write a Python program to get the largest and smallest number from a list without builtin functions. 

def find_largest_smallest(input_list):
    if len(input_list) == 0:
        return None, None  # Return None for both largest and smallest if list is empty
    
    largest = input_list[0]
    smallest = input_list[0]
    
    for num in input_list:
        if num > largest:
            largest = num
        elif num < smallest:
            smallest = num
            
    return largest, smallest

# Example usage
numbers = [10, 5, 25, 3, 40, 15]
largest, smallest = find_largest_smallest(numbers)

if largest is not None and smallest is not None:
    print("Largest number in the list:", largest)
    print("Smallest number in the list:", smallest)
else:
    print("List is empty.")


OUTPUT : 

Largest number in the list: 40
Smallest number in the list: 3
------------------------------------------------------------------------------------------------------------------------------------

3. Write a Python program to find duplicate values from a list and display those.   

 def find_duplicates(input_list):
    duplicates = []
    seen = set()
    
    for item in input_list:
        if item in seen and item not in duplicates:
            duplicates.append(item)
        else:
            seen.add(item)
    
    return duplicates

# Example usage
my_list = [1, 2, 3, 4, 2, 5, 6, 7, 3, 8, 9, 1, 2]
result = find_duplicates(my_list)

if result:
    print("Duplicate values in the list:", result)
else:
    print("No duplicate values found in the list.")


OUTPUT : 

Duplicate values in the list: [2, 3, 1]
------------------------------------------------------------------------------------------------------------------------------------

4. Write a Python program to split a given list into two parts where the length of the first part of the list is given. 

Original list: [1, 1, 2, 3, 4, 4, 5, 1] 

Length of the first part of the list: 3 

Splitted the said list into two parts: 

([1, 1, 2], [3, 4, 4, 5, 1]) 

def split_list(input_list, length_first_part):
    if length_first_part < 0 or length_first_part > len(input_list):
        return None, None  # Return None for both parts if length is invalid
    
    first_part = input_list[:length_first_part]
    second_part = input_list[length_first_part:]
    
    return first_part, second_part

# Example usage
original_list = [1, 1, 2, 3, 4, 4, 5, 1]
length_first_part = 3
first_part, second_part = split_list(original_list, length_first_part)

if first_part is not None and second_part is not None:
    print("Original list:", original_list)
    print("Length of the first part of the list:", length_first_part)
    print("Splitted the said list into two parts:")
    print((first_part, second_part))
else:
    print("Invalid length provided.")

OUTPUT:
Original list: [1, 1, 2, 3, 4, 4, 5, 1]
Length of the first part of the list: 3
Splitted the said list into two parts:
([1, 1, 2], [3, 4, 4, 5, 1])
-------------------------------------------------------------------------------------------------------------------------------------
5. Write a Python program to traverse a given list in reverse order, and print the elements with the original index. Original list: ['red', 'green', 'white', 'black'] Traverse the said list in reverse order:

black 

white 

green 

red 

def traverse_reverse_with_index(input_list):
    for i in range(len(input_list) - 1, -1, -1):
        print(input_list[i], " (Original index:", i, ")")

# Example usage
original_list = ['red', 'green', 'white', 'black']
print("Original list:", original_list)
print("Traverse the said list in reverse order:")
traverse_reverse_with_index(original_list)

OUTPUT:
Original list: ['red', 'green', 'white', 'black']
Traverse the said list in reverse order:
black  (Original index: 3 )
white  (Original index: 2 )
green  (Original index: 1 )
red  (Original index: 0 )